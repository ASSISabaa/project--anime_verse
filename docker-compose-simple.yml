version: '3.8'

services:
  # MinIO Storage
  minio:
    image: minio/minio:latest
    container_name: animeverse-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - animeverse_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-init:
    image: minio/mc:latest
    container_name: animeverse-minio-init
    depends_on:
      - minio
    networks:
      - animeverse_network
    entrypoint: >
      /bin/sh -c "
      sleep 10 &&
      mc alias set myminio http://minio:9000 admin password123 &&
      mc mb myminio/bronze-layer --ignore-existing &&
      mc mb myminio/silver-layer --ignore-existing &&
      mc mb myminio/gold-layer --ignore-existing &&
      mc mb myminio/warehouse --ignore-existing &&
      echo 'MinIO buckets created successfully!'
      "

  # Kafka Streaming
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: animeverse-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - animeverse_network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: animeverse-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - animeverse_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: animeverse-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    networks:
      - animeverse_network

  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    container_name: animeverse-kafka-init
    depends_on:
      - kafka
    networks:
      - animeverse_network
    entrypoint: >
      /bin/sh -c "
      sleep 30 &&
      kafka-topics --create --topic pos-transactions --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 &&
      kafka-topics --create --topic cinema-sales --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 &&
      kafka-topics --create --topic inventory-updates --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 &&
      kafka-topics --create --topic customer-reviews --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 &&
      echo 'Kafka topics created successfully!'
      "

  # Spark Processing
  spark-master:
    image: bitnami/spark:3.4.1
    container_name: animeverse-spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8081:8080"
      - "7077:7077"
    volumes:
      - ./processing/spark_apps:/opt/bitnami/spark/work-dir
      - ./processing/jars:/opt/bitnami/spark/jars
    networks:
      - animeverse_network

  spark-worker-1:
    image: bitnami/spark:3.4.1
    container_name: animeverse-spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    volumes:
      - ./processing/spark_apps:/opt/bitnami/spark/work-dir
      - ./processing/jars:/opt/bitnami/spark/jars
    networks:
      - animeverse_network
    depends_on:
      - spark-master

volumes:
  minio_data:

networks:
  animeverse_network:
    driver: bridge
    